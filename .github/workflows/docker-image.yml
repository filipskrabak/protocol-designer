name: Deploy to Server (FIIT protocol-designer.app)

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: SSH to server and update services
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        port: ${{ secrets.SERVER_PORT }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /home/ubuntu/protocol-designer
          
          # Pull latest code first
          git pull
          
          # Fix permissions
          cd backend
          sudo chown -R ubuntu:ubuntu postgres_data
          cd ..
          
          # Build new images without stopping services
          docker compose build
          
          # Rolling update strategy - update services one by one
          echo "Starting rolling deployment..."
          
          # Update backend first (API server)
          echo "Updating backend service..."
          docker compose up -d --no-deps --wait fastapi-python
          echo "Backend updated and healthy"
          
          # Update frontend (depends on backend health check)
          echo "Updating frontend service..."
          docker compose up -d --no-deps --wait frontend-vue
          echo "Frontend updated and healthy"
          
          # Clean up old images
          echo "Cleaning up old images..."
          docker image prune -af
          
          echo "Deployment completed successfully!"
